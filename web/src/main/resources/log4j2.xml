<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > DEBUG > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="WARN" monitorInterval="30">

    <Properties>
        <!-- 配置日志文件输出目录，此配置将日志输出到tomcat根目录下的指定文件夹 -->
        <Property name="log.path">./logs/</Property>
    </Properties>

    <!--先定义所有的appender-->
    <appenders>
        <!--这个输出控制台的配置-->
        <console name="Console" target="SYSTEM_OUT">
            <!--输出日志的格式-->
            <PatternLayout pattern="[%-5p] %d{yyyy-MM-dd HH:mm:ss:SSS}:%m[%l]%n"/>
        </console>

        <!-- 这个会打印出所有的DEBUG及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="RequestLogFile" fileName="${log.path}/request/request.log"
                     filePattern="${log.path}/request/$${date:yyyy-MM}/request-%d{yyyy-MM-dd}-%i.log">
            <PatternLayout pattern="[%-5p] %d{yyyy-MM-dd HH:mm:ss:SSS}:%m[%l]%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="100 MB"/>
            </Policies>
            <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
            <DefaultRolloverStrategy max="20"/>
        </RollingFile>
        <!-- 这个会打印出所有的DEBUG及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="MsgDEBUGLogFile" fileName="${log.path}/msgDEBUG/msgDEBUG.log"
                     filePattern="${log.path}/msgDEBUG/$${date:yyyy-MM}/msgDEBUG-%d{yyyy-MM-dd}-%i.log">
            <PatternLayout pattern="[%-5p] %d{yyyy-MM-dd HH:mm:ss:SSS}:%m[%l]%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="100 MB"/>
            </Policies>
            <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
            <DefaultRolloverStrategy max="20"/>
        </RollingFile>
        <!-- 这个会打印出所有的DEBUG及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="LoginLogFile" fileName="${log.path}/login/login.log"
                     filePattern="${log.path}/login/$${date:yyyy-MM}/login-%d{yyyy-MM-dd}-%i.log">
            <PatternLayout pattern="[%-5p] %d{yyyy-MM-dd HH:mm:ss:SSS}:%m[%l]%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="100 MB"/>
            </Policies>
            <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
            <DefaultRolloverStrategy max="20"/>
        </RollingFile>
    </appenders>
    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <!--设置单独的过滤级别-->
        <logger name="com.tarena" level="DEBUG" includeLocation="true" additivity="false">
            <appender-ref ref="Console"/>
            <appender-ref ref="MsgDEBUGLogFile"/>
        </logger>
        <logger name="org.springframework" level="DEBUG" includeLocation="true" additivity="false">
            <appender-ref ref="Console"/>
            <appender-ref ref="MsgDEBUGLogFile"/>
        </logger>
        <logger name="springfox.documentation" level="DEBUG" includeLocation="true" additivity="false">
            <appender-ref ref="Console"/>
            <appender-ref ref="MsgDEBUGLogFile"/>
        </logger>
        
        <logger name="requestLog" level="DEBUG" includeLocation="true" additivity="false">
            <appender-ref ref="RequestLogFile"/>
        </logger>
        <logger name="loginLog" level="DEBUG" includeLocation="true" additivity="false">
            <appender-ref ref="LoginLogFile"/>
        </logger>
        <logger name="com.tarena.platform.job" level="error"/>
        <logger name="org.quartz" level="error"/>
        <logger name="org.springframework.scheduling.quartz" level="error"/>
       
       
        <root level="DEBUG" includeLocation="true" additivity="false">
            <appender-ref ref="Console"/>
        </root>
        <!-- 操作日志 -->
        <logger name="operationLog" level="DEBUG">
            <appender-ref ref="Console"/>
            <appender-ref ref="MsgDEBUGLogFile"/>
        </logger>
    </loggers>
</configuration>